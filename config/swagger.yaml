openapi: 3.0.0
info:
  title: Khrestyk API
  description:  Find out how your APIs work.
  version: 1.0.0
# info:
#     title: Khrestik API
#     description: Find out how your APIs work.
#     version: 1.0.0
servers:
    - url: http://localhost:8086/api/v1
    - url: 146.190.232.27:8089/api/v1
paths:
    /product/all:
        get:
            description: "отримання усіх продуктів. задокументованими є 2 типи помилок: 500 - помилка сервера та 202 - дані успішно передано клієнту"
            summary: get all product data
            tags:
                - Products
            responses:
                '202':
                    description: all products received successfully
                    content:
                        application:json:
                            properties:
                                products:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '500':
                    description: server error
    /product/single/{productId}:
        get:
            description: "отримання одного конкретного продукту на основі переданого _id."
            summary: get single product data
            parameters:
                - in: path
                  name: productId
                  schema:
                    type: string
                  required: true
                  description: unique mongo id
            tags:
                - Products
            responses:
                '202':
                    description: all products received successfully
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '404':
                    description: id not found
                '422':
                    description: id probably incorrect
                '500':
                    description: server error 
    /product/store-form-data:
        post:
            description: "застосовується для збереження даних про окремі продукти. параметр images містить опис зображень продукту, та може містити до 50 зображень, переданих із вказанням індексу: images[0], images[1], ..., images[n(max 50)] виключно 2 параметри є обов'язковими: title та description . Продукт надсилається у вигляді FormData"
            tags:
                - Products
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                isActive:
                                    type: boolean
                                    default: true
                                title:
                                    type: string
                                description:
                                    type: string
                                price:
                                    type: number
                                qty_available:
                                    type: integer
                                category:
                                    type: string
                                images[0][alt]:
                                    type: string
                                images[0][is_main]:
                                    type: boolean
                                    default: true
                                images[0]:
                                    type: file
                                images[1][alt]:
                                    type: string
                                images[1][is_main]:
                                    type: boolean
                                    default: true
                                images[1]:
                                    type: file
                            required:
                                - description
                                - title
            responses:
                '201':
                    description: created product
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '422':
                    description: incorrect data params passed
                '500':
                    description: server error 
    /product/edit/{product_id}:
        patch:
            description: "редагування уже існуючого продукту, а також додавання чи зміна даних супутніх зображень: alt, is_main. Для редагування іcнуючого зображення обов'язковим є передача параметра _id цього зображення. Інакше за відсутності параметру _id зображення буде розцінене як цілком нове і буде додано до масиву значень"
            parameters:
                -  in: path
                   name: product_id
                   schema:
                    type: string
                    required: true
            tags:
                - Products
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                isActive:
                                    type: boolean
                                    default: true
                                title:
                                    type: string
                                description:
                                    type: string
                                price:
                                    type: number
                                qty_available:
                                    type: integer
                                category:
                                    type: string
                                images[0][_id]:
                                    type: string
                                images[0][alt]:
                                    type: string
                                images[0][is_main]:
                                    type: boolean
                                    default: true
                                images[0]:
                                    type: file
                                images[1][_id]:
                                    type: string
                                images[1][alt]:
                                    type: string
                                images[1][is_main]:
                                    type: boolean
                                    default: true
                                images[1]:
                                    type: file
                                
            responses:
                '202':
                    description: успішно відредаговано
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '404':
                    description: продукт не знайдено
                '422':
                    description: 'дані передано некоректно, або дані відсутні (за умови err: Cannot read property length of undefined")'
                '500':
                    description: server error 
    /product/image/{id}:
        delete:
            description: видалення зображення. Для видалення зображення потрібно передати _id зображення 
            parameters:
                - in: path
                  name: id
            tags:
                - Products
            responses:
                '200':
                    description: успішно видалено
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                '404':
                    description: не знайдено

                '500':
                    description: server error

        patch:
            description: додавання зображення. Для додавання потрібно передати _id продукту у якому має бути поміщене зображення
            parameters:
                  - in: path
                    name: id
            tags:
              - Products
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                images[0][alt]:
                                    type: string
                                images[0][is_main]:
                                    type: boolean
                                    default: true
                                images[0]:
                                    type: file
            responses:
              '200':
                  description: успішно видалено
                  content:
                      application:json:
                          properties:
                              product:
                                  schema:
                                      $ref: '#/components/schemas/Product'
              '404':
                  description: не знайдено

              '500':
                  description: server error
    /product/document/{doc_id}:
    /admin/product/all:
        get:
            description: "отримання усіх продуктів. задокументованими є 2 типи помилок: 500 - помилка сервера та 202 - дані успішно передано клієнту"
            summary: get all product data
            tags:
                - Adminpanel
            responses:
                '202':
                    description: all products received successfully
                    content:
                        application:json:
                            properties:
                                products:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '500':
                    description: server error
    /admin/product/single/{productId}:
        get:
            description: "отримання одного конкретного продукту на основі переданого _id."
            summary: get single product data
            parameters:
                - in: path
                  name: productId
                  schema:
                    type: string
                  required: true
                  description: unique mongo id
            tags:
                - Adminpanel
            responses:
                '202':
                    description: all products received successfully
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '404':
                    description: id not found
                '422':
                    description: id probably incorrect
                '500':
                    description: server error 
    /admin/product/store-form-data:
        post:
            description: "застосовується для збереження даних про окремі продукти. параметр images містить опис зображень продукту, та може містити до 50 зображень, переданих із вказанням індексу: images[0], images[1], ..., images[n(max 50)] виключно 2 параметри є обов'язковими: title та description . Продукт надсилається у вигляді FormData"
            tags:
                - Adminpanel
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                isActive:
                                    type: boolean
                                    default: true
                                title:
                                    type: string
                                description:
                                    type: string
                                price:
                                    type: number
                                qty_available:
                                    type: integer
                                category:
                                    type: string
                                images[0][alt]:
                                    type: string
                                images[0][is_main]:
                                    type: boolean
                                    default: true
                                images[0]:
                                    type: file
                                images[1][alt]:
                                    type: string
                                images[1][is_main]:
                                    type: boolean
                                    default: true
                                images[1]:
                                    type: file
                            required:
                                - description
                                - title
            responses:
                '201':
                    description: created product
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '422':
                    description: incorrect data params passed
                '500':
                    description: server error 
    /admin/product/edit/{product_id}:
        patch:
            description: "редагування уже існуючого продукту, а також додавання чи зміна даних супутніх зображень: alt, is_main. Для редагування іcнуючого зображення обов'язковим є передача параметра _id цього зображення. Інакше за відсутності параметру _id зображення буде розцінене як цілком нове і буде додано до масиву значень"
            parameters:
                -  in: path
                   name: product_id
                   schema:
                    type: string
                    required: true
            tags:
                - Adminpanel
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                isActive:
                                    type: boolean
                                    default: true
                                title:
                                    type: string
                                description:
                                    type: string
                                price:
                                    type: number
                                qty_available:
                                    type: integer
                                category:
                                    type: string
                                images[0][_id]:
                                    type: string
                                images[0][alt]:
                                    type: string
                                images[0][is_main]:
                                    type: boolean
                                    default: true
                                images[0]:
                                    type: file
                                images[1][_id]:
                                    type: string
                                images[1][alt]:
                                    type: string
                                images[1][is_main]:
                                    type: boolean
                                    default: true
                                images[1]:
                                    type: file
                                
            responses:
                '202':
                    description: успішно відредаговано
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                                categories:
                                    schema:
                                        $ref: '#/components/schemas/Categories'
                '404':
                    description: продукт не знайдено
                '422':
                    description: 'дані передано некоректно, або дані відсутні (за умови err: Cannot read property length of undefined")'
                '500':
                    description: server error 
    /admin/product/image/{id}:
        delete:
            description: видалення зображення. Для видалення зображення потрібно передати _id зображення 
            parameters:
                - in: path
                  name: id
            tags:
                - Adminpanel
            responses:
                '200':
                    description: успішно видалено
                    content:
                        application:json:
                            properties:
                                product:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                '404':
                    description: не знайдено

                '500':
                    description: server error

        patch:
            description: додавання зображення. Для додавання потрібно передати _id продукту у якому має бути поміщене зображення
            parameters:
                  - in: path
                    name: id
            tags:
              - Products
            requestBody:
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            properties:
                                images[0][alt]:
                                    type: string
                                images[0][is_main]:
                                    type: boolean
                                    default: true
                                images[0]:
                                    type: file
            responses:
              '200':
                  description: успішно видалено
                  content:
                      application:json:
                          properties:
                              product:
                                  schema:
                                      $ref: '#/components/schemas/Product'
              '404':
                  description: не знайдено

              '500':
                  description: server error
    /admin/product/document/{doc_id}:
        delete:
            description: видалення цілого документу. Для видалення у запиті потрібно передати _id продукту. Каскадом при видаленні продукту видаляється оригінальне зображення
            parameters:
                - in: path
                  name: doc_id
            tags:
                - Adminpanel
            responses:
                '204':
                    description: успішно видалено
                    content:
                        application:json:
                            properties:
                                products:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                '404':
                    description: не знайдено
                '500':
                    description: server error
    /cart/add-product:
        post:
            description: "збереження замовлення. \n
            1. Якщо це перший продукт у кошику - відправка запиту має проводитися без вказання id. У такому випадку сервер розцінює запит як нове замовлення і створює нову сутність. \n
            2. Якщо користувач додає нові продукти у замовлення, потрібно відправляти повторно увесь масив даних по продуктам і раніше отримане у відповіді сервера значення id. Це призведе до операції оновлення запису. \n
            3. Сервер повертає зображення продукту конвертоване у base64 для тривалого зберігання у базі (для актуалізації замовлень конкретних продуктів, навіть якщо поточні продукти цього 'артикулу мають інше зображення') \n
            4. У разі невдалої конвертації зображення - url не повертається \n
            Еквівалентом оформлення замовлення, є відправка статусу orderStatus = ordered. \n
              Загалом можливі так статуси замовлення - 'started', 'ordered', 'processed', 'changed', 'finished', 'declined', 'sent' \b "
            tags:
                - shoppingCart
            requestBody:
                content:
                    application/json:
                        schema:
                            allOf:
                                - $ref: '#/components/schemas/userInfo'
                                - $ref: '#/components/schemas/products'
                                - $ref: '#/components/schemas/processing'
                                - orders: string
                        example:
                            id: id only for order updates. You will receive '__id' from first successufully saved document  id === __id 
                            userInfo:
                                name: John
                                email: test@google.com
                                phone: 29345342
                            products:
                                - _id: 5f479732150199002d8b0c59
                                  isActive: true,
                                  description: Let that Shit Go, Custom Gift, Inspirational Cuff, Motivational Jewelry, Gift for Her, Unique Gift for Women
                                  title: Embroidered pillow
                                  price: 2.99
                                  qty_available: 10
                                  amount: 5
                                  category: for her
                                  images:
                                    - alt: Image num.1 pretty nice!
                                      url: http://somestrangeDomain.com/storage/foo-bar-bazz.jpg
                                      is_main: true
                                      _id: 60352430c037bd003bfeb583
                                    - alt: Image num.2 pretty nice second!
                                      url: http://somestrangeDomain.com/storage/bla-2387h3hhgS76.jpg
                                      is_main: false
                                      _id: 5f708c417faf29003102b2cd
                            processing:
                                - processingStatus: ordered
                                  content: "initial order"
                            orderStatus: ordered
            responses:
                '200':
                    description: успішно додано
                    content:
                        application:json:
                            properties:
                                products:
                                    schema:
                                        $ref: '#/components/schemas/Product'
                '422':
                    description: неможливо обробити
                '500':
                    description: server error
    /cart/cart-delete/{id}:
        delete:
          description: видалення усього замовлення
          parameters:
            - in: path
              name: id
          tags:
                - shoppingCart
          responses:
                '200':
                    description: успішно видалено
                '404':
                    description: не знайдено (при повторних запитах)
                '500':
                    description: server error
    /cart/all:
        parameters:
            - in: query
              name: take
#              style: form
              schema:
                  type: integer
                  description: "кількість елементів, що потрібно повернути"
            - in: query
              name: skip
              schema:
                  type: integer
                  description: "кількість елементів, що потрібно пропустити"
#              style: form
        get:
            description: список замовлень
            tags:
                - shoppingCart
            responses:
                '202':
                    description: accepted
                '422':
                    description: неможливо обробити
                '500':
                    description: помилка сервера
    /cart/show/{cart_id}:
        get:
            description: замовлення
            tags:
                - shoppingCart
            parameters:
                - in: path
                  name: cart_id
            responses:
                '202':
                    description: accepted
                '422':
                    description: неможливо обробити
                '500':
                    description: помилка сервера
    /order-processing/{id}/{status}:
    /admin/order-processing/{id}/{status}:
        patch:
            description: оновлення статусів замовлення (процессінг). Content містить важливу супутню інформацію про замовлення - дані про відправку, листування з замовником, і т.п.
            tags:
                - Adminpanel
            parameters:
                - in: path
                  name: id
                - in : path
                  name: status
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                content:
                                    type: string
            responses:
                '201':
                    description: created/updated
                '404':
                    description: not found
                '500':
                    description: помилка сервера
    /v1/jwt-policy/token-exist:
        get:
            description: перевірка валідності токену
            tags:
                - authentification
            parameters:
                - in: header
                  name: Authorization
                  schema:
                    type: string
                  required: true
    /auth/jwt-policy/sign-in:
        post:
            description: отримання токену
            tags:
                - authentification
            requestBody:
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                username:
                                    type: string
                                password:
                                    type: string
                        example:
                            username: 'John_Doe'
                            password: 'xZGXhMNAKp3eTKuv'
            responses:
                '200':
                    description: успішно згенеровано
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/SucсessAuth'
                '500':
                    description: помилка сервера
    /mail/feedback-form:
        post:
            description: відправка повідомлення на пошту адміністратора
            tags:
                - Mailing
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/Feedback'
            responses:
                '200':
                    description: відправлено
                '400':
                    description: некоректні request параметри, проблеми при відправці
                '500':
                    description: помилка сервера
    # /auth/create-user:
    #     post:
    #         description: "
    #         створення юзера(користувача системи). \n
    #         Метод використовується для додавання 'адмінів'. \n
    #         звичайні покупці через цей метод не створюються. \n
    #         Роль адміна окремо застосовується в мануальному режимі
    #         "
    #         tags:
    #             - authentification
    #         security:
    #             - bearerAuth: []
    #         requestBody:
    #             content:
    #                 application/json:
    #                     schema:
    #                         type: object
    #                         properties:
    #                             login:
    #                                 type: string
    #                             password:
    #                                 type: string
    #         responses:
    #             '200':
    #                 description: ok
    #             '401':
    #                 description: токен відсутній
    #             '403':
    #                 description: у користувача недостатньо прав на виконання операції (потрібна роль role - admin), токен невалідний, або час життя вичерпано
    #             '500':
    #                 description: помилка сервера

components:
    securitySchemes:
        bearerAuth:
            type: apiKey
            name: token
            in: header
    schemas:
        SucсessAuth:
            type: object
            properties:
                token:
                    type: string
                expired:
                    type: integer
        Feedback:
            type: object
            properties:
                name:
                    type: string
                    required: true
                phone:
                    type: string
                    required: true
                message:
                    type: string
                    required: true
                message_type:
                    type: string
        Product:
            type: object
            properties:
                _id: 
                    type: string
                    required: true
                description:
                    type: string
                    required: true
                title:
                    type: string
                    required: true
                isActive:
                    type: boolean
                    default: true
                price: 
                    type: number
                qty_available:
                    type: integer
                createdAt:
                    type: string
                updatedAt:
                    type: string
                category:
                    type: string
                    required: true
                images: 
                    type: array
                    items:
                        type: object
                        properties:
                            alt:
                                type: string
                            url:
                                type: string
                            _id:
                                type: string
                            is_main:
                                type: boolean
        Image:
            type: object
            properties:
                alt: 
                    type: string
                is_main: 
                    type: boolean
                url:
                    type: string
                file: 
                    type: string
        Categories:
            type: array
            items:
                type: string
        userInfo:
            type: object
            properties:
            name:
                type: string
            email: 
                type: string
            phone:
                type: string
        products:
            type: array 
            items:
                type: object 
            properties:
                title: 
                    type: string
                amount: number
                price: number
                images: 
                    type: array
                    items: 
                        type: object 
                        properties: 
                            alt: 
                                type: string, 
                            image: 
                                type: string
        orderStatus:
            type: string 
            enum: [started, closed]
        processing:
            type:
                array
            items:
                type: object
                    properties:
                        processingStatus:
                            type: string
                        content:
                            type: string


